---
- name: Retrieve an existing Floating IP
  uri:
    url: https://api.digitalocean.com/v2/floating_ips/{{ digital_floating_ip }}
    method: GET
    body_format: json
    HEADER_Content-Type: "application/json"
    HEADER_Authorization: "Bearer {{ digital_api_token }}"
    status_code: 200
  register: droplet

- debug: var=droplet['json']['floating_ip']['droplet']['id']

- name: Get droplet
  uri:
    url: https://api.digitalocean.com/v2/droplets/{{ droplet['json']['floating_ip']['droplet']['id'] }}
    method: GET
    HEADER_Content-Type: "application/json"
    HEADER_Authorization: "Bearer {{ digital_api_token }}"
    status_code: 200
  register: droplet_data
  until: droplet_data.status == 200

- debug: var=droplet_data['json']['droplet']['name']

- name: Set environment to deploy
  set_fact:
    env_to_deploy: production02
  when: (droplet_data['json']['droplet']['name'] == "production01")

- debug: var=env_to_deploy

- name: List droplets by tag
  uri:
    url: https://api.digitalocean.com/v2/droplets?tag_name={{ env_to_deploy }}
    method: GET
    body_format: json
    HEADER_Content-Type: "application/json"
    HEADER_Authorization: "Bearer {{ digital_api_token }}"
    status_code: 200
  register: droplet_tag

- debug: msg="Droplet id {{ droplet_tag['json']['droplets'][0]['id'] }}"

- name: Assign to new env
  uri:
    url: https://api.digitalocean.com/v2/floating_ips/{{ digital_floating_ip }}/actions
    method: POST
    body:
      type: "assign"
      droplet_id: "{{ droplet_tag['json']['droplets'][0]['id'] }}"
    body_format: json
    HEADER_Content-Type: "application/json"
    HEADER_Authorization: "Bearer {{ digital_api_token }}"
    status_code: 201
  register: droplet_ip

- debug: msg="Status {{ droplet_ip['json']['action']['status'] }}"